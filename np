#!/bin/bash
#  np: New Project build system
#  Run --help for arguments

rootdir=$(pwd) # Current directory, for reference (this will serve as our "home")

check_pkg_manager() { # Check what package manager the user is running
  declare -A os_info;
  os_info[/etc/redhat-release]="\033[38;2;157;37;253myum\033[0m"
  os_info[/etc/arch-release]="\033[38;2;240;250;81mpacman\033[0m"
  os_info[/etc/gentoo-release]="\033[38;2;111;64;248memerge\033[0m"
  os_info[/etc/SuSE-release]="\033[38;2;82;250;112mzypp\033[0m"
  os_info[/etc/debian_version]="\033[38;2;236;2;52mapt\033[0m"
  os_info[/etc/alpine-release]="\033[38;2;7;217;247mapk\033[0m"

  if [ ${#os_info[@]} -eq 0 ]; then # If no package manager detected, set it to "Unknown" in bold red
    os_info[/bin/cp]="\033[1m\033[38;2;255;0;0mUnknown\033[0m" # We need a file that's present on all UNIX systems here. /bin/cp is common enough.
  fi

  for f in ${!os_info[@]} # Print the package manager name
  do
    if [[ -f $f ]]; then
      echo -e "Your package manager is: ${os_info[$f]}"
    fi
  done
}

# Check if the necessary TUI components exist
check_if_tui_supported() {
  if hash dialog 2>/dev/null; then
    echo -e "TUI components exist. \x1b[38;2;0;100;0mLaunching with TUI\033[5m..."
    return 0
  else
    echo "It doesn't look like you have the dialog binary installed, which is required for the fancy TUI. Would you like to:"
    echo "  0. Attempt the dialog binary via your package manager, and then proceed with the installation"
    echo "  1. Proceed with the installation in a plain TUI way, similar to the way I'm communicating with you right now."
    echo "  2. Ignore and attempt to launch the TUI anyway (ONLY IF YOU KNOW WHAT YOU ARE DOING!!)"
    echo "  3. Specify a custom location for the dialog binary (make sure you have its depencies installed!)"
    printf "\033[1mType the number of the option you want to pick, like on a phone call.\n"
  fi
}

if [ $# -eq 0 ]; then # If no arguments are supplied...
  echo "No arguments supplied. Checking if project already exists..."
  if [ -f "$rootdir/.np/project.json" ]; then
    echo "Project already exists. Launching configuration screen..."
  fi

  printf "\nNo project exists in your current working directory. Would you like to create a new one? \033[1m[Y/n]\033[0m "
  read -p "" -n 1 -r
  if [[ $REPLY =~ ^[Yy]$ ]]; then
    printf "\nnuclear bomb diffused"
  fi
  echo
fi

echo -e "\033[0m"
exit 0