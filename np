#!/bin/bash
#  np: New Project C/C++ build system

rootdir=$(pwd) # Current directory, for reference (this will serve as our "home")

# Embedded files
project_json=$(cat <<EOF
{
  "projectname": "name",
  "stdversion": "stdver",
  "configurations": [
    {
      "configname": "confname",
      "os": "os",
      "arch": "arch",
      "gcc": "gcc",
      "g++": "gpp",
      "compilerargs": [
        "args"
      ],
      "sourcefiles": [
        "srcfiles"
      ],
      "cincludedirs": [
        "cincs"
      ],
      "cppincludedirs": [
        "cppincs"
      ],
      "libdirs": [
        "libdirs"
      ],
      "ldlibs": [
        "ldlibs"
      ]
    }
  ],
  "vscodeintegration": false,
  "vscodefolder": "vscf"
}
EOF
)
template_cpp=$(cat <<EOF
Ly9tYWluLmNwcDogPGRlc2NyaWJlIHdoYXQgdGhpcyBmaWxlIGRvZXM+CgovL0luY2x1ZGVzCiNpbmNsdWRlIDxpb3N0cmVhbT4gLy9Db25zb2xlIEkvTyBzdHJlYW1zCgppbnQgbWFpbihpbnQgYXJnYywgY2hhciAqYXJndltdKSB7CiAgLy9tYWtlIHN0YWxsbWFuIHByb3VkIQoKICByZXR1cm4gMDsKfQ==
EOF
)

xit() {
  printf "\033[0m"
  exit 0
}

regenerate_buildscript() {
  printf "\nthis is not what it sounds like\n"
  xit
}

if [ -f "$rootdir/.np/project.json" ]; then
  printf "Regenerating build script...\n"
  regenerate_buildscript
  xit
fi

printf "No project exists in your current working directory. Would you like to create a new one? \033[1m[Y/n]\033[0m "
read -n 1 -r
if [[ $REPLY =~ ^[Nn]$ ]]; then
  printf "\nThen why did you launch this script???\n"
  xit
fi
if [[ $REPLY =~ ^[Yy]$ ]]; then
  mkdir -p .np
  echo $project_json | jq -s '' >> .np/project.json # Extract project.json
  printf "\n\n.np/project.json written successfully.\n"

  mkdir -p src
  echo $template_cpp | base64 -d >> src/main.cpp # Extract main.cpp
  printf "src/main.cpp written successfully.\n"
  xit
fi

printf "\033[0m"
exit 0